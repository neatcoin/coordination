#+title: Neatcoin core developer workbook

This is a workbook documenting plans and what is actually happening in
Neatcoin development. The workbook is maintained as a =org= document
so that it works as an actual task list.

The workbook is currently maintained by =sorpaas=.

* Timeline
Those are tentative timelines related to on-chain events.

** Referendum schedule
Tentative schedule of on-chain referendum process for Neatcoin, if no
other higher priority proposals from the community are tabled.

- Activation of =.neatuser= TLD for first-come-first-served
  distribution. ([2021-12-04 Sat] to [2021-12-11 Sat])
- Enable common ICANN TLDs =.com=, =.net=, =.org= on
  Neatcoin. ([2021-12-11 Sat] to [2021-12-18 Sat])
- Neatcoin runtime upgrade: benchmarking and weight information update
  for Nomo-related pallets. ([2021-12-18 Sat] to [2021-12-25 Sat])
- Enable the full list of ICANN TLDs. (Not yet scheduled)
- Neatcoin runtime upgrade: update Substrate upstream to Polkadot
  v0.9.12. (Not yet scheduled)
- Neatcoin runtime upgrade: auction functionality for Nomo. (Not yet
  scheduled)
- Increase validator count: the current safe target is 37. (Not yet
  scheduled)
* Chain maintenance

** Substrate maintenance

*** TODO Monthly Substrate upstream update (November 2021)
Update Substrate dependencies to the newest commit, as of
November 2021.

- [ ] Submit pin update PR.
- [ ] Check migrations needed to add and remove.
- [ ] Release node v1.3.
- [ ] Local testing.
- [ ] WebAssembly binary submission.
- [ ] Exchange and explorer coordination.

** Documentation

No specific documentation task in work at this moment.

** Testnet

No specific testnet task in work at this moment.

* Common pallet libraries

The common pallet libraries =rust-blockchain/pallets= are things that
are shared between Kulupu and Neatcoin.

** TODO Migration scripts for =pallet-variables=
Neatcoin's =pallet-variables= is already from
=rust-blockchain/pallets=. However, Kulupu currently uses an older
version of it which requires migration scripts to update.

* Actor-based smart contract

The runtime WebAssembly interface in Substrate is deprecated. This
actually makes actor-based smart contract slightly simpler as
previously if we use that runtime interface, we would lack an
important memory API. Now, it is expected that everyone will have to
use the interpreter instead.

The current work in actor-based still focuses on design.

* Massive BABE

By separating validator set of BABE and GRANDPA, we can significantly
increase the number of validators we can support in the system, as
bottlenecks are only on GRANDPA. The major work to do here is
modifications of the runtime staking pallet.

* Enactment of the DNS system

Neatcoin contains the necessary runtime of the DNS system, it just
hasn't been enabled. We need to first enable it on testnet to make
sure everything is working alright, and then switch it on in mainnet.
